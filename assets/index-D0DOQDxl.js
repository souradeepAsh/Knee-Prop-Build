import{S as ve,P as Me,W as Ce,O as Se,A as qe,D as ke,R as Be,c as Ae,V as s,d as R,M as O,e as N,f as A,g as Te,h as Q,B as T,i as F,j as z,Q as Fe,k as de,l as ae,m as ue,n as me,o as pe,T as ze}from"./vendor-yKcvCMgB.js";import{S as Ve}from"./three-stl-loader-B9TzmMlJ.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))n(a);new MutationObserver(a=>{for(const i of a)if(i.type==="childList")for(const r of i.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&n(r)}).observe(document,{childList:!0,subtree:!0});function o(a){const i={};return a.integrity&&(i.integrity=a.integrity),a.referrerPolicy&&(i.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?i.credentials="include":a.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function n(a){if(a.ep)return;a.ep=!0;const i=o(a);fetch(a.href,i)}})();const u=new ve,P=new Me(75,window.innerWidth/window.innerHeight,.1,1e3);P.position.set(0,5,20);P.lookAt(0,0,0);const b=new Ce;b.setSize(window.innerWidth,window.innerHeight);b.setClearColor(15658734);document.body.appendChild(b.domElement);const X=new Se(P,b.domElement),Ie=new qe(4210752);u.add(Ie);const fe=new ke(16777215,1);fe.position.set(1,1,1).normalize();u.add(fe);const Re=new Ve,I=new Be,B=new Ae,W=[];let G={},L=!1;const g=[];let q=null,Z=new Set;const ge=new Set(["Hip Center","Femur Proximal Canal","Femur Distal Canal","Medial Epicondyle","Lateral Epicondyle","Distal Medial Pt","Distal Lateral Pt","Posterior Medial Pt","Posterior Lateral Pt"]);let M=3,E=3,C=10,k=[],h=null,v=[],m=null,p=null,oe=[],V=null,f=null,w=null,H=!1,ye,we,he,xe;function ie(e,t,o,n){e?(e.geometry.setFromPoints([t,o]),e.geometry.attributes.position.needsUpdate=!0):(e=new z(new T().setFromPoints([t,o]),new F({color:0})),u.add(e),n==="medial"?ye=e:we=e)}function ee(){if(!w)return;const e=g.find(c=>c.userData.name==="Distal Medial Pt").position,t=g.find(c=>c.userData.name==="Distal Lateral Pt").position,o=new s(0,0,1).applyQuaternion(w.quaternion),n=new s,a=new s,i=new de().setFromNormalAndCoplanarPoint(o,w.position);i.intersectLine(new ae(e,e.clone().add(o)),n),i.intersectLine(new ae(t,t.clone().add(o)),a),ie(ye,e,n,"medial"),ie(we,t,a,"lateral");const r=e.distanceTo(n)*1e3,l=t.distanceTo(a)*1e3;re(he,r,n,"medial"),re(xe,l,a,"lateral"),document.getElementById("medialDistance").textContent=`${r.toFixed(1)} mm`,document.getElementById("lateralDistance").textContent=`${l.toFixed(1)} mm`}function Oe(e){const t=document.createElement("canvas"),o=t.getContext("2d");o.font="Bold 24px Arial",o.fillStyle="black",o.fillText(e,0,24);const n=new ue(t),a=new me({map:n}),i=new pe(a);return i.scale.set(.1,.05,1),i}function re(e,t,o,n){const i=`${(Math.round(t*10)/10).toFixed(1)} mm`;e?Ne(e,i):(e=Oe(i),u.add(e),n==="medial"?he=e:xe=e),e.position.copy(o)}function Ne(e,t){const o=e.material.map.image,n=o.getContext("2d");n.clearRect(0,0,o.width,o.height),n.font="Bold 24px Arial",n.fillStyle="black",n.fillText(t,0,24),e.material.map.needsUpdate=!0}function U(){if(!w)return;const e=new s(0,0,1).applyQuaternion(w.quaternion),t=w.position.dot(e),o=new de(e,-t);Object.values(G).forEach(n=>{H?n.material.clippingPlanes=[o]:n.material.clippingPlanes=[],n.material.needsUpdate=!0}),b.localClippingEnabled=!0}function se(){document.querySelector(".control-group:nth-child(1) .value").textContent=`${M}°`,document.querySelector(".control-group:nth-child(2) .value").textContent=`${E}°`,document.querySelector(".control-group:nth-child(3) .value").textContent=`${C} mm`}function _(){if(m&&(u.remove(m),V&&(u.remove(V),V=null)),!h||v.length<2){console.log("Mechanical axis plane or anterior line not created yet");return}const e=new s(0,0,0),t=v[1],o=new s().subVectors(new s().fromArray(t.geometry.attributes.position.array,3),new s().fromArray(t.geometry.attributes.position.array,0)).normalize(),n=new R(h.geometry.parameters.width,h.geometry.parameters.height),a=new O({color:65535,side:N,transparent:!0,opacity:.5});m=new A(n,a),m.position.copy(e),m.quaternion.copy(h.quaternion),m.rotateY(Q.degToRad(M)),u.add(m);const i=new s(0,0,1).applyQuaternion(m.quaternion),r=new s().crossVectors(o,i).normalize(),l=new s().addVectors(e,r.multiplyScalar(10)),c=new T().setFromPoints([e,l]),d=new F({color:65280});V=new z(c,d),u.add(V),K()}function K(){if(p&&(u.remove(p),p.userData.associatedLines&&p.userData.associatedLines.forEach(D=>u.remove(D))),!m){console.log("Varus/Valgus plane not created yet");return}const e=new s(0,0,0),t=new R(m.geometry.parameters.width,m.geometry.parameters.height),o=new O({color:16711935,side:N,transparent:!0,opacity:.5});p=new A(t,o),p.position.copy(e),p.quaternion.copy(m.quaternion);const n=new s(1,0,0).applyQuaternion(m.quaternion);p.rotateOnWorldAxis(n,Q.degToRad(E)),u.add(p);const a=m.geometry.parameters.width/2,i=new s(-a,0,0),r=new s(a,0,0),l=new T().setFromPoints([i,r]),c=new F({color:16711935}),d=new z(l,c);p.add(d),console.log("Flexion/Extension plane updated:",E),We()}function We(){if(f&&u.remove(f),!p){console.log("Flexion/Extension plane not created yet");return}const e=g.find(i=>i.userData.name==="Distal Medial Pt").position,t=g.find(i=>i.userData.name==="Distal Lateral Pt").position,o=new s().addVectors(e,t).multiplyScalar(.5),n=new R(p.geometry.parameters.width,p.geometry.parameters.height),a=new O({color:139,side:N,transparent:!0,opacity:.5});f=new A(n,a),f.position.copy(o),f.quaternion.copy(p.quaternion),u.add(f),J(),console.log("Distal Medial Plane created:",f)}function J(){if(w&&u.remove(w),!f){console.log("Distal Medial plane not created yet");return}const e=new R(f.geometry.parameters.width,f.geometry.parameters.height),t=new O({color:4915330,side:N,transparent:!0,opacity:.5});w=new A(e,t),w.quaternion.copy(f.quaternion);const o=new s(0,0,1).applyQuaternion(f.quaternion),n=C/1e3;w.position.copy(f.position).add(o.multiplyScalar(n)),u.add(w),U(),ee(),console.log("Distal Resection Plane created:",w)}function $e(){const e=document.getElementById("createPlaneButton");e.disabled=!1,e.style.backgroundColor="#4CAF50",e.style.color="white"}function je(e,t,o){const n=e.normal,a=e.position,i=le(t,n,a),r=le(o,n,a),l=new T().setFromPoints([i,r]),c=new F({color:16776960,linewidth:3}),d=new z(l,c);return u.add(d),d}function le(e,t,o){const a=new s().subVectors(e,o).dot(t);return new s().copy(e).sub(t.clone().multiplyScalar(a))}function Qe(e,t,o=5){const n=new s(t.geometry.attributes.position.array[0],t.geometry.attributes.position.array[1],t.geometry.attributes.position.array[2]),a=new s(t.geometry.attributes.position.array[3],t.geometry.attributes.position.array[4],t.geometry.attributes.position.array[5]),i=new s().subVectors(a,n).normalize(),r=new s(i.z,0,-i.x).normalize();r.z<0&&r.negate();const l=new s().addVectors(e,r.multiplyScalar(o)),c=new T().setFromPoints([e,l]),d=new F({color:16776960,linewidth:3}),D=new z(c,d);return u.add(D),D}function He(){h&&u.remove(h),v.forEach(d=>u.remove(d)),v=[];const e=g.find(d=>d.userData.name==="Hip Center").position,t=new s(0,0,0),o=g.find(d=>d.userData.name==="Medial Epicondyle").position,n=g.find(d=>d.userData.name==="Lateral Epicondyle").position,a=new s().subVectors(e,t).normalize(),i=t,r=e.distanceTo(t)*2;h=Ge(a,i,r,16711680);const l=je(h,o,n);v.push(l);const c=Qe(t,l);v.push(c),document.querySelectorAll("#plane-controls button").forEach(d=>{d.disabled=!1}),_(),console.log("Mechanical Axis Plane created:",h),console.log("Projected lines:",v),console.log("Anterior line:",c)}function Ge(e,t,o=1,n=65280){const a=new R(o,o),i=new O({color:n,side:N,transparent:!0,opacity:.5}),r=new A(a,i);r.position.copy(t);const l=new Fe;return l.setFromUnitVectors(new s(0,0,1),e),r.setRotationFromQuaternion(l),r.normal=e,u.add(r),console.log("Plane added to scene:",r),r}function Ue(e){L=!L;const t=L?"rgb(0, 0, 0)":"rgb(169, 169, 169)";e.userData.drawButton(t),e.userData.texture.needsUpdate=!0,W.forEach(n=>{n.userData.transformControl&&n.userData.transformControl&&(n.userData.transformControl.enabled=!1,n.userData.transformControl.visible=!1)}),document.querySelectorAll("#sprite-table td[data-name]").forEach(n=>{n.draggable=L})}function Pe(e,t,o,n,a){const r=document.createElement("canvas"),l=r.getContext("2d");r.width=64,r.height=64;const c=64/2,d=64/2,D=64/2-4;function x(Y){l.clearRect(0,0,r.width,r.height),l.fillStyle=Y,l.beginPath(),l.arc(c,d,D,0,Math.PI*2),l.fill(),l.strokeStyle="rgb(255, 255, 255)",l.lineWidth=3,l.beginPath(),l.arc(c,d,D,0,Math.PI*2),l.stroke(),l.fillStyle="rgb(255, 255, 255)",l.font="32px sans-serif",l.textAlign="center",l.textBaseline="middle",l.fillText(e,c,d)}x("rgb(169, 169, 169)");const te=new ue(r),Ee=new me({map:te}),y=new pe(Ee),S=document.createElement("div");return S.className="annotation",S.dataset.index=a,S.innerHTML=`
    <div class="circleMark" data-index="${a}">${e}</div>`,y.userData={text:e,onClick:t,active:!1,drawButton:x,texture:te,boneName:o,annotationElement:S,isPlacedSprite:!1,name:n},y.onClick=()=>{if(e==="0")Ue(y);else{if(L||y.userData.isPlacedSprite)return;{y.userData.active=!y.userData.active;const Y=y.userData.active?"rgb(0, 0, 0)":"rgb(169, 169, 169)";y.userData.drawButton(Y),y.userData.texture.needsUpdate=!0,S.classList.toggle("active",y.userData.active),S.querySelector(".circleMark").classList.toggle("active",y.userData.active);const ne=G[y.userData.boneName];ne&&ne.material.color.set(y.userData.active?16711680:7779781)}}y.userData.onClick&&y.userData.onClick()},W.push(y),y}function Ye(e,t,o){t.forEach((n,a)=>{const i=Pe(n.text,n.onClick,o,n.annotationText,a),r=new s;e.localToWorld(r.set(n.position.x,n.position.y,n.position.z)),i.position.copy(r),i.scale.set(.15,.15,0),u.add(i)})}function ce(e,t,o,n,a,i,r){return new Promise((l,c)=>{Re.load(e,function(d){console.log(`${t} model loaded`);const D=new Te({color:i,clippingPlanes:[],clipShadows:!0}),x=new A(d,D);x.position.set(o.x,o.y,o.z),x.scale.set(n.x,n.y,n.z),x.rotation.set(a.x,a.y,a.z),u.add(x),G[t]=x,Ye(x,r,t),U(),l(x)},void 0,function(d){console.error(`Error loading ${t} model:`,d),c(d)})})}const Xe=[{position:{x:20,y:-23,z:20},text:"0",onClick:()=>console.log("Femur button clicked"),annotationText:"This is the femur bone."}],_e=[];function Ke(){W.forEach(e=>{const t=e.position.clone().project(P),o=(t.x*.5+.5)*window.innerWidth,n=-(t.y*.5-.5)*window.innerHeight,a=e.userData.annotationElement;a&&(a.style.left=`${o}px`,a.style.top=`${n}px`,a.style.display=t.z<1?"block":"none")})}function be(){if(requestAnimationFrame(be),X.update(),Ke(),m&&h&&(m.quaternion.copy(h.quaternion),m.rotateY(Q.degToRad(M)),oe.length>0)){const e=oe[0],t=new s(0,0,1).applyQuaternion(m.quaternion),o=new s(0,0,-1).applyQuaternion(m.quaternion),n=new s().crossVectors(o,t).normalize(),a=new s(0,0,0),i=new s().addVectors(a,n.multiplyScalar(10));e.geometry.setFromPoints([a,i]),e.geometry.attributes.position.needsUpdate=!0}if(p&&m){p.quaternion.copy(m.quaternion);const e=new s(1,0,0).applyQuaternion(m.quaternion);if(p.rotateOnWorldAxis(e,Q.degToRad(E)),f){f.quaternion.copy(p.quaternion);const t=g.find(a=>a.userData.name==="Distal Medial Pt").position,o=g.find(a=>a.userData.name==="Distal Lateral Pt").position,n=new s().addVectors(t,o).multiplyScalar(.5);if(f.position.copy(n),w){w.quaternion.copy(f.quaternion);const a=new s(0,0,1).applyQuaternion(f.quaternion),i=C/1e3;w.position.copy(f.position).add(a.multiplyScalar(i)),U(),ee()}}}b.render(u,P)}function De(){const e=[...ge].every(o=>Z.has(o)),t=document.getElementById("updateButton");t.disabled=!e,e?(t.style.backgroundColor="#4CAF50",t.style.color="white"):(t.style.backgroundColor="#cccccc",t.style.color="#666666")}function Je(e,t,o){const n=Pe(o.toString(),null,"placed",t,o);n.position.copy(e),n.scale.set(.1,.1,0),u.add(n),g.push(n);const a=new ze(P,b.domElement);return a.attach(n),a.setMode("translate"),a.enabled=!1,a.visible=!1,u.add(a),n.userData.transformControl=a,a.addEventListener("mouseDown",()=>{X.enabled=!1}),a.addEventListener("mouseUp",()=>{X.enabled=!0}),n.userData.transformControl.addEventListener("change",()=>{(t==="Distal Medial Pt"||t==="Distal Lateral Pt")&&ee()}),n.userData.onClick=()=>{L&&(g.forEach(i=>{i!==n&&i.userData.transformControl&&(i.userData.transformControl.visible=!1,i.userData.transformControl.enabled=!1)}),a.visible=!0,a.enabled=!0)},Z.add(t),De(),n}function j(e,t,o=16777215,n=6){const a=new F({color:o,linewidth:n}),i=new T().setFromPoints([e,t]),r=new z(i,a);return u.add(r),r}function Ze(){k.forEach(e=>u.remove(e)),k=[]}function et(){Ze();const e=g.find(c=>c.userData.name==="Hip Center").position,t=new s(0,0,0),o=g.find(c=>c.userData.name==="Femur Proximal Canal").position,n=g.find(c=>c.userData.name==="Femur Distal Canal").position,a=g.find(c=>c.userData.name==="Medial Epicondyle").position,i=g.find(c=>c.userData.name==="Lateral Epicondyle").position,r=g.find(c=>c.userData.name==="Posterior Medial Pt").position,l=g.find(c=>c.userData.name==="Posterior Lateral Pt").position;k.push(j(t,e,16711680,5)),k.push(j(o,n,65280,5)),k.push(j(a,i,255,5)),k.push(j(r,l,16776960,5)),$e()}function tt(){document.querySelectorAll("#sprite-table td[data-name]").forEach(e=>{e.draggable=!0,e.addEventListener("dragstart",t=>{L&&(q=t.target.dataset.name,t.target.style.opacity="0.5")}),e.addEventListener("dragend",t=>{t.target.style.opacity="1"})})}function nt(){console.log("All models loaded"),be(),tt(),Le()}function Le(){const e=document.getElementById("resectionToggle");H?(e.classList.add("active"),e.textContent="On"):(e.classList.remove("active"),e.textContent="Off")}Promise.all([ce("Right_Femur.stl","Right Femur",{x:0,y:0,z:0},{x:.01,y:.01,z:.01},{x:Math.PI/-2,y:0,z:0},7779781,Xe),ce("Right_Tibia.stl","Right Tibia",{x:.17,y:-.15,z:0},{x:.01,y:.01,z:.01},{x:Math.PI/-2,y:0,z:0},13791774,_e)]).then(()=>{nt()}).catch(e=>{console.error("Error loading models:",e)});document.getElementById("mechanicalAxisPlaneToggle").addEventListener("click",$);document.getElementById("varusValgusPlaneToggle").addEventListener("click",$);document.getElementById("flexionExtensionPlaneToggle").addEventListener("click",$);document.getElementById("distalMedialPlaneToggle").addEventListener("click",$);document.getElementById("distalResectionPlaneToggle").addEventListener("click",$);function $(e){const t=e.target,o=t.id.replace("Toggle","");let n;switch(o){case"mechanicalAxisPlane":n=h;break;case"varusValgusPlane":n=m;break;case"flexionExtensionPlane":n=p;break;case"distalMedialPlane":n=f;break;case"distalResectionPlane":n=w;break}n&&(n.visible=!n.visible,t.classList.toggle("inactive",!n.visible))}window.addEventListener("resize",()=>{b.setSize(window.innerWidth,window.innerHeight),P.aspect=window.innerWidth/window.innerHeight,P.updateProjectionMatrix()});window.addEventListener("mousemove",e=>{B.x=e.clientX/window.innerWidth*2-1,B.y=-(e.clientY/window.innerHeight)*2+1,I.setFromCamera(B,P),I.intersectObjects(W).length>0?b.domElement.style.cursor="pointer":b.domElement.style.cursor="auto"});document.getElementById("createPlaneButton").addEventListener("click",()=>{console.log("Create Plane button clicked"),He()});document.getElementById("updateButton").addEventListener("click",()=>{[...ge].every(e=>Z.has(e))?et():console.log("Not all required annotations have been placed.")});document.getElementById("resectionToggle").addEventListener("click",()=>{H=!H,U(),Le()});document.querySelectorAll(".control-group").forEach((e,t)=>{const o=e.querySelector(".decrement"),n=e.querySelector(".increment");o&&n&&(o.addEventListener("click",()=>{switch(t){case 0:M=Math.max(M-1,-10),m&&_();break;case 1:E=Math.max(E-1,-15),p&&K();break;case 2:C=Math.max(C-1,0),J();break}se()}),n.addEventListener("click",()=>{switch(t){case 0:M=Math.min(M+1,10),m&&_();break;case 1:E=Math.min(E+1,15),p&&K();break;case 2:C=Math.min(C+1,50),J();break}se()}))});window.addEventListener("click",e=>{B.x=e.clientX/window.innerWidth*2-1,B.y=-(e.clientY/window.innerHeight)*2+1,I.setFromCamera(B,P);const t=I.intersectObjects(W),o=I.intersectObjects(Object.values(G));if(t.length>0){const n=t[0].object;n.onClick(),n.userData.onClick&&n.userData.onClick()}else if(L&&o.length>0&&q){const n=o[0].point,a=document.querySelector(`#sprite-table td[data-name="${q}"]`),i=parseInt(a.previousElementSibling.dataset.index);Je(n,q,i),a&&(a.draggable=!1,a.style.color="gray"),q=null,De(),g.forEach(r=>{r.userData.transformControl&&(r.userData.transformControl.visible=!1,r.userData.transformControl.enabled=!1)})}});document.querySelectorAll("#sprite-table td[data-name]").forEach(e=>{e.addEventListener("dragstart",t=>{L&&(q=t.target.dataset.name,t.target.style.opacity="0.5")}),e.addEventListener("dragend",t=>{t.target.style.opacity="1"})});
